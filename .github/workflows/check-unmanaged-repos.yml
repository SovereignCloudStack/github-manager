---
name: Check for unmanaged repositories in organization

"on":
  workflow_dispatch:
  push:
    branches:
      - main
      - fix_reporting
  schedule:
    - cron: '30 5 * * *'
jobs:
  check-unmanaged-repos:
    runs-on: ubuntu-latest
    steps:
      - name: Check token permissions
        run: |
          if [ -z "${{ secrets[format('GHP_{0}', github.actor)] }}" ]; then
            echo "No valid PAT found for ${{github.actor}}"
            exit 1
          else
            echo "Found valid PAT for ${{github.actor}}"
          fi

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pipenv'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install pipenv wheel
          pipenv install

      - name: Call check_repositories.py
        id: check
        shell: bash {0}
        run: |
          set -o pipefail
          pipenv run python3 check_repositories.py | tee "$GITHUB_OUTPUT"
          exit $?
        env:
          API_TOKEN: ${{ secrets[format('GHP_{0}', github.actor)] }}

      - name: Create issue on failed workflow
        if: ${{ failure() }}
        uses: dblock/create-a-github-issue@v3
        with:
          filename: ${{GITHUB_WORKSPACE}}/.github/unmanaged-repos-issue.md
          update_existing: true
          assignees: scoopex
          search_existing: open
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BODY: ${{ steps.check.outputs.CHECK_RESULT }}
          URL_REF: ${{ GITHUB_SERVER_URL }}/${{ GITHUB_REPOSITORY }}/actions/runs/${{ GITHUB_RUN_ID }}
